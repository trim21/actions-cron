name: qbittorrent

on:
  push:
    branches:
      - "master"
    paths:
      - .github/workflows/qbittorrent.yaml

env:
  QB_VERSION: "release-4.6.5"
  LT_VERSION: "v2.0.10"

jobs:
  ci:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - run: python -m pip install setuptools wheel py7zr==0.20.*
      - run: python -m pip install aqtinstall==3.1.*
      - run: python -m aqt version

      - run: python3 -m aqt install-qt linux desktop 6.5.3 gcc_64 --autodesktop --outputdir ./Qt --archives icu qtbase qtdeclarative qtsvg qttools

      - run: python -m aqt install-src linux desktop 6.5.3 --outputdir ./Qt --archives icu qtbase qtdeclarative qtsvg qttools

      - run: ls ${{ github.workspace }}/Qt/6.5.3/gcc_64/lib/cmake

      #      - name: Install Qt
      #        uses: jurplel/install-qt-action@v4
      #        with:
      #          version: "6.5.*"
      #          archives: icu qtbase qtdeclarative qtsvg qttools
      #          #          source: true
      #          #          src-archives: qtbase
      #          cache: true
      #          arch: gcc_64
      #          target: desktop
      #          host: "linux"

      - uses: actions/checkout@v4
        with:
          repository: trim21/qBittorrent
          path: qb
          #          ref: "${{ env.QB_VERSION }}"
          ref: personal-patch

      - uses: actions/checkout@v4
        with:
          ref: "${{ env.LT_VERSION }}"
          repository: arvidn/libtorrent
          path: qb/libtorrent
          submodules: recursive

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ env.QB_VERSION }}-${{ env.LT_VERSION }} # Eg. "some_build-ubuntu-latest"

      - run: >-
          sudo apt-get install -y
          build-essential pkg-config automake libtool git zlib1g-dev
          libssl-dev libgeoip-dev libboost-dev libboost-system-dev
          libboost-chrono-dev libboost-random-dev cmake ninja-build

      #      - run: >-
      #          sudo apt-get install -y
      #          build-essential pkg-config automake libtool git zlib1g-dev
      #          libssl-dev libgeoip-dev cmake ninja-build
      #      - name: Install boost
      #        uses: MarkusJx/install-boost@v2.4.5
      #        id: install-boost
      #        with:
      # REQUIRED: Specify the required boost version
      # A list of supported versions can be found here:
      # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
      #          boost_version: "1.83.0"
      #          platform_version: "20.04"

      - run: |
          cmake -B build -G Ninja -D CMAKE_BUILD_TYPE=RelWithDebInfo \
              -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
          cmake --build build
          sudo cmake --install build
        working-directory: qb/libtorrent
      #        env:
      #          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

      - run: |
          cmake -B build -G Ninja -D BUILD_SHARED_LIBS=OFF \
            -D OPENSSL_USE_STATIC_LIBS=TRUE \
            -D ZLIB_USE_STATIC_LIBS=ON \
            -D QT_FEATURE_openssl_linked=on -D QT_FEATURE_static=on -D QT_FEATURE_shared=off \
            -D CMAKE_SKIP_RPATH=on -D CMAKE_SKIP_INSTALL_RPATH=on \
            -D CMAKE_BUILD_TYPE=RelWithDebInfo \
            -D CMAKE_ARCHIVE_OUTPUT_DIRECTORY=libs \
            -D TESTING=OFF -D QT6=ON -D GUI=OFF \
            -DCMAKE_PREFIX_PATH="${{ github.workspace }}/Qt/6.5.3/gcc_64/lib/cmake" \
            -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
        #          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
        working-directory: qb
      #        env:
      #          Qt6_DIR: "${{ github.workspace }}/Qt/6.5.3/gcc_64/lib/cmake"

      - run: cmake --build build
        working-directory: qb

      - uses: actions/upload-artifact@v4
        with:
          path: |
            qb/build/qbittorrent-nox
