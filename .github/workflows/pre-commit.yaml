name: pre-commit

#on: ['push']

on:
  push:
    branches:
      - "**"
  schedule:
    # daily on github default branch
    - cron: "0 0 * * 1"

jobs:
  main:
    strategy:
      matrix:
        repo:
          - { repo: Trim21/BGmi, branch: dev }
          - { repo: Trim21/pol, branch: dev }

    runs-on: ubuntu-16.04

    steps:
      - uses: actions/checkout@v2


      ################ node

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "13.x"
          registry-url: "https://registry.npmjs.org"

      - uses: actions/cache@v1
        with:
          path: ./node_modules
          key: node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-

      - run: npm i

      ################ end node


      ################ python

      - uses: actions/setup-python@v1
        with:
          python-version: "3.7"

      - name: Get Latest tools version
        id: get-version
        run: |
          echo "::set-output name=renovate::$(npm info renovate --json | jq -r .version)"
          echo "::set-output name=poetry::$(curl -sSl https://pypi.org/pypi/poetry/json | jq .info.version -r)"
          echo "::add-path::$HOME/.local/bin"
          echo "::add-path::$HOME/.poetry/bin"
          PY=$(python --version)
          echo "::set-output name=python::${PY// /_}"

      - uses: actions/cache@v1
        name: Cache Poetry
        with:
          path: ~/.poetry
          key: poetry-itself-${{ steps.get-version.outputs.poetry }}

      - name: Install Poetry
        run: |
          $HOME/.poetry/bin/poetry --version && exit 0
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - --version ${{ steps.get-version.outputs.poetry }}

      - uses: actions/checkout@v2
        with:
          repository: ${{ matrix.repo.repo }}
          ref: ${{ matrix.repo.branch }}
          path: ${{ matrix.repo.repo }}
          fetch-depth: 1
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - uses: actions/cache@v1
        name: Cache Python Packages
        with:
          path: ~/.local
          key: poetry-${{ matrix.repo.repo }}-${{ steps.get-version.outputs.python }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ matrix.repo.repo }}-${{ steps.get-version.outputs.python }}-

      - uses: actions/cache@v1
        name: Cache Pre-Commit
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ matrix.repo.repo }}-${{ steps.get-version.outputs.python }}-${{ hashFiles('**/.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ matrix.repo.repo }}-${{ steps.get-version.outputs.python }}-

      - name: Install Dependencies
        working-directory: ./${{ matrix.repo.repo }}
        run: pip install --user --no-deps -r <(poetry export -f requirements.txt --dev)

      - name: check if pre-commit update
        run: node $GITHUB_WORKSPACE/pre_commit.js
        working-directory: ./${{ matrix.repo.repo }}
        env:
          PERSONAL_GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          REPO: ${{ matrix.repo.repo }}
          BRANCH: ${{ matrix.repo.branch }}
